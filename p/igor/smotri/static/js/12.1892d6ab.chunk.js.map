{"version":3,"sources":["@core/components/breadcrumbs/index.js","@core/components/input-password-toggle/index.js","assets/images/avatars/11-small.png","assets/images/avatars/3-small.png","views/account-settings/Tabs.js","views/account-settings/GeneralTabContent.js","views/account-settings/PasswordTabContent.js","views/account-settings/index.js"],"names":["BreadCrumbs","props","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","className","tag","to","active","InputPasswordToggle","label","hideIcon","showIcon","visible","htmlFor","placeholder","iconSize","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","addonType","onClick","size","renderIcon","defaultProps","Tabs","activeTab","toggleTab","Nav","pills","vertical","NavItem","NavLink","GeneralTabs","data","email","setEmail","fullName","avatar","company","username","setUsername","onSubmit","e","preventDefault","Row","Col","sm","FormGroup","Label","name","value","onChange","target","required","Alert","color","href","Button","Ripple","outline","PasswordTabContent","AvInput","dataCustom","general","require","default","info","bio","dob","country","website","phone","social","socialLinks","twitter","facebook","google","linkedIn","instagram","quora","connections","profileImg","github","notification","commentOnArticle","answerOnForm","followMe","newAnnouncements","productUpdates","blogDigest","AccountSettings","setActiveTab","md","tab","Card","CardBody","TabContent","TabPane","tabId","GeneralTabContent"],"mappings":"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","file":"static/js/12.1892d6ab.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/*<div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>*/}\n      {/*  <div className='form-group breadcrum-right dropdown'>*/}\n      {/*    <UncontrolledButtonDropdown>*/}\n      {/*      <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>*/}\n      {/*        <Grid size={14} />*/}\n      {/*      </DropdownToggle>*/}\n      {/*      <DropdownMenu tag='ul' right>*/}\n      {/*        <DropdownItem tag={Link} to='/apps/chat'>*/}\n      {/*          <CheckSquare className='mr-1' size={14} />*/}\n      {/*          <span className='align-middle'>Todo</span>*/}\n      {/*        </DropdownItem>*/}\n      {/*        <DropdownItem tag={Link} to='/apps/chat'>*/}\n      {/*          <MessageSquare className='mr-1' size={14} />*/}\n      {/*          <span className='align-middle'>Chat</span>*/}\n      {/*        </DropdownItem>*/}\n      {/*        <DropdownItem tag={Link} to='/apps/email'>*/}\n      {/*          <Mail className='mr-1' size={14} />*/}\n      {/*          <span className='align-middle'>Email</span>*/}\n      {/*        </DropdownItem>*/}\n      {/*        <DropdownItem tag={Link} to='/apps/calendar'>*/}\n      {/*          <Calendar className='mr-1' size={14} />*/}\n      {/*          <span className='align-middle'>Calendar</span>*/}\n      {/*        </DropdownItem>*/}\n      {/*      </DropdownMenu>*/}\n      {/*    </UncontrolledButtonDropdown>*/}\n      {/*  </div>*/}\n      {/*</div>*/}\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const { label, hideIcon, showIcon, visible, className, htmlFor, placeholder, iconSize, ...rest } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","export default __webpack_public_path__ + \"static/media/11-small.5c61c575.png\";","export default __webpack_public_path__ + \"static/media/3-small.8d6585e8.png\";","import { Nav, NavItem, NavLink } from 'reactstrap'\nimport { User, Lock, Info, Link, Bell } from 'react-feather'\n\nconst Tabs = ({ activeTab, toggleTab }) => {\n  return (\n    <Nav className='nav-left' pills vertical>\n      <NavItem>\n        <NavLink active={activeTab === '1'} onClick={() => toggleTab('1')}>\n          <User size={18} className='mr-1' />\n          <span className='font-weight-bold'>General</span>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink active={activeTab === '2'} onClick={() => toggleTab('2')}>\n          <Lock size={18} className='mr-1' />\n          <span className='font-weight-bold'>Change Password</span>\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\n\nexport default Tabs\n","import { Fragment, useState } from 'react'\nimport { AvForm, AvInput } from 'availity-reactstrap-validation-safe'\nimport { Button, Media, Label, Row, Col, Input, FormGroup, Alert } from 'reactstrap'\n\nconst GeneralTabs = ({ data }) => {\n  const [email, setEmail] = useState(data.email ? data.email : '')\n  const [name, setName] = useState(data.fullName ? data.fullName : '')\n  const [avatar, setAvatar] = useState(data.avatar ? data.avatar : '')\n  const [company, setCompany] = useState(data.company ? data.company : '')\n  const [username, setUsername] = useState(data.username ? data.username : '')\n\n  const onChange = e => {\n    const reader = new FileReader(),\n      files = e.target.files\n    reader.onload = function () {\n      setAvatar(reader.result)\n    }\n    reader.readAsDataURL(files[0])\n  }\n\n  return (\n    <Fragment>\n      <AvForm className='mt-2' onSubmit={e => e.preventDefault()}>\n        <Row>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='username'>Username</Label>\n              <AvInput\n                id='username'\n                name='username'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                placeholder='Username'\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='email'>E-mail</Label>\n              <AvInput\n                type='email'\n                id='email'\n                name='email'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                placeholder='Email'\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Col className='mt-75' sm='12'>\n            <Alert className='mb-50' color='warning'>\n              <h4 className='alert-heading'>Your email is not confirmed. Please check your inbox.</h4>\n              <div className='alert-body'>\n                <a href='/' className='alert-link' onClick={e => e.preventDefault()}>\n                  Resend confirmation\n                </a>\n              </div>\n            </Alert>\n          </Col>\n          <Col className='mt-2' sm='12'>\n            <Button.Ripple className='mr-1' color='primary'>\n              Save changes\n            </Button.Ripple>\n            <Button.Ripple color='secondary' outline>\n              Cancel\n            </Button.Ripple>\n          </Col>\n        </Row>\n      </AvForm>\n    </Fragment>\n  )\n}\n\nexport default GeneralTabs\n","import { FormGroup, Row, Col, Button } from 'reactstrap'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { AvForm, AvInput } from 'availity-reactstrap-validation-safe'\n\nconst PasswordTabContent = () => {\n  return (\n    <AvForm onSubmit={e => e.preventDefault()}>\n      <Row>\n        <Col sm='6'>\n          <FormGroup>\n            <InputPasswordToggle\n              tag={AvInput}\n              className='input-group-merge'\n              label='Old Password'\n              htmlFor='old-password'\n              name='old-password'\n              required\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm='6'>\n          <FormGroup>\n            <InputPasswordToggle\n              tag={AvInput}\n              className='input-group-merge'\n              label='New Password'\n              htmlFor='new-password'\n              name='new-password'\n              required\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <InputPasswordToggle\n              tag={AvInput}\n              className='input-group-merge'\n              label='Retype New Password'\n              htmlFor='retype-new-password'\n              name='retype-new-password'\n              required\n            />\n          </FormGroup>\n        </Col>\n        <Col className='mt-1' sm='12'>\n          <Button.Ripple className='mr-1' color='primary'>\n            Save changes\n          </Button.Ripple>\n          <Button.Ripple color='secondary' outline>\n            Cancel\n          </Button.Ripple>\n        </Col>\n      </Row>\n    </AvForm>\n  )\n}\n\nexport default PasswordTabContent\n","import { Fragment, useState, useEffect } from 'react'\nimport Tabs from './Tabs'\nimport axios from 'axios'\nimport InfoTabContent from './InfoTabContent'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport SocialTabContent from './SocialTabContent'\nimport GeneralTabContent from './GeneralTabContent'\nimport PasswordTabContent from './PasswordTabContent'\nimport NotificationsTabContent from './NotificationsTabContent'\nimport { Row, Col, TabContent, TabPane, Card, CardBody } from 'reactstrap'\n\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/react/pages/page-account-settings.scss'\nconst dataCustom = {\n    general: {\n      avatar: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default,\n      username: 'johndoe',\n      fullName: 'John Doe',\n      email: 'granger007@hogward.com',\n      company: 'IBM Technology'\n    },\n    info: {\n      bio: '',\n      dob: null,\n      country: 'USA',\n      website: '',\n      phone: 6562542568\n    },\n    social: {\n      socialLinks: {\n        twitter: 'https://www.twitter.com',\n        facebook: '',\n        google: '',\n        linkedIn: 'https://www.linkedin.com',\n        instagram: '',\n        quora: ''\n      },\n      connections: {\n        twitter: {\n          profileImg: require('@src/assets/images/avatars/11-small.png').default,\n          id: 'johndoe'\n        },\n        google: {\n          profileImg: require('@src/assets/images/avatars/3-small.png').default,\n          id: 'luraweber'\n        },\n        facebook: {},\n        github: {}\n      }\n    },\n    notification: {\n      commentOnArticle: true,\n      answerOnForm: true,\n      followMe: false,\n      newAnnouncements: true,\n      productUpdates: true,\n      blogDigest: false\n    }\n}\nconst AccountSettings = () => {\n  const [activeTab, setActiveTab] = useState('1'),\n    [data, setData] = useState(dataCustom)\n\n  const toggleTab = tab => {\n    setActiveTab(tab)\n  }\n\n\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Account Settings' breadCrumbParent='Pages' breadCrumbActive='Account Settings' />\n      {data !== null ? (\n        <Row>\n          <Col className='mb-2 mb-md-0' md='3'>\n            <Tabs activeTab={activeTab} toggleTab={toggleTab} />\n          </Col>\n          <Col md='9'>\n            <Card>\n              <CardBody>\n                <TabContent activeTab={activeTab}>\n                  <TabPane tabId='1'>\n                    <GeneralTabContent data={data.general} />\n                  </TabPane>\n                  <TabPane tabId='2'>\n                    <PasswordTabContent />\n                  </TabPane>\n                </TabContent>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default AccountSettings\n"],"sourceRoot":""}