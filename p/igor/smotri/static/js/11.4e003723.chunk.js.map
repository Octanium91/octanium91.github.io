{"version":3,"sources":["@core/components/avatar/index.js","assets/images/portrait/small/avatar-s-11.jpg","utility/context/Can.js","redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/UserDropdown.js","redux/actions/auth/index.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js","utility/Utils.js","utility/hooks/useSkin.js"],"names":["Avatar","forwardRef","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","Tag","tag","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","AbilityContext","createContext","createContextualCan","Consumer","handleContentWidth","value","dispatch","type","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","layout","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Fragment","useEffect","menuCollapsed","menuHidden","query","length","Routes","path","component","lazy","BlankLayout","useSkin","useState","isMounted","setIsMounted","Customizer","skin","setSkin","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","FormGroup","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","id","onChange","renderSkinsRadio","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","Footer","Date","getFullYear","target","rel","UserDropdown","userData","setUserData","isUserLoggedIn","JSON","parse","localStorage","getItem","avatar","defaultAvatar","UncontrolledDropdown","DropdownToggle","role","DropdownMenu","right","DropdownItem","Link","to","removeItem","NavbarUser","setMenuVisibility","ThemeToggler","NavItem","NavLink","ThemeNavbar","title","navLink","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","data-tour","themeConfig","app","appLogoImage","appName","isNavLinkActive","link","currentURL","routerProps","meta","isNavGroupActive","some","child","search","navigation","result","getAllParents","obj","match","res","recurse","current","key","VerticalNavMenuLink","item","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","exact","strict","arr","parents","searchParents","disabled","active","newTab","isActive","url","resetActiveGroup","badge","Badge","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","filter","val","onCollapseClick","pop","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","wheelPropagation","onScrollY","container","scrollTop","classList","contains","add","remove","scrollMenu","useRTL","isRTL","element","document","getElementsByTagName","setAttribute","valueToStore","Function","handleRTL","error","console","log","useNavbarType","useFooterType","footer","useNavbarColor","backgroundColor","VerticalLayout","menuVisibility","window","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","addEventListener","footerClasses","static","sticky","hidden","bgColorCondition","floating","Navbar","expand","light","dark","show","customizer","showUnder","bottom","Button","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","data","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","maxHeight","overflowY","ddRef","left","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","navbarClasses","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","useContext","Layouts","NotAuthorized","Error","basename","process","render","Object","keys","LayoutTag","LayoutRoutes","LayoutPaths","route","LayoutRoutesAndPaths","assign","fallback","App","isObjEmpty","colors","primary25","primary","neutral10","neutral20","neutral30","body","bordered","setItem","stringify"],"mappings":"qNAQMA,EAASC,sBAAW,SAACC,EAAOC,GAAS,IAAD,IAGtCC,EAiBEF,EAjBFE,MACAC,EAgBEH,EAhBFG,UACAC,EAeEJ,EAfFI,aACAC,EAcEL,EAdFK,SACAC,EAaEN,EAbFM,KACAC,EAYEP,EAZFO,QACAC,EAWER,EAXFQ,QACAC,EAUET,EAVFS,KACAC,EASEV,EATFU,WACAC,EAQEX,EARFW,UACAC,EAOEZ,EAPFY,IACAC,EAMEb,EANFa,UACAC,EAKEd,EALFc,SACAC,EAIEf,EAJFe,OACKC,EAGHhB,EAHFiB,IACAC,EAEElB,EAFFkB,cACGC,EAnBmC,YAoBpCnB,EApBoC,wKAgCxC,OACE,eAACgB,EAAD,yBACEb,UAAWiB,IAAW,UAAD,mBAClBjB,EAAYA,GADM,2BAEZD,GAAUA,GAFE,+BAGRI,GAASA,GAHD,IAKrBL,IAAKA,GACDkB,GAPN,eASW,IAARP,QAAyBS,IAART,EAChB,uBACET,UAAWiB,IAAW,iBAAkB,CACtC,oBAAqBb,IAEvBe,MAAOJ,EAJT,UAMGb,EA1BW,SAAAkB,GAClB,IAAMC,EAAU,GAKhB,OAJkBD,EAAIE,MAAM,KAClBC,SAAQ,SAAAC,GAChBH,EAAQI,KAAKD,EAAE,OAEVH,EAAQK,KAAK,IAoBFC,CAAYtB,GAAWA,EAElCC,GAAc,KACdF,EACC,cAAC,IAAD,CAAOL,MAAOQ,GAA0B,UAAWP,UAAU,oBAAoB4B,MAAI,EAArF,SACGpB,GAAwB,MAEzB,QAGN,qBACER,UAAWiB,IAAW,eACnBhB,EAAeA,IAElB4B,IAAKpB,EACLqB,IAAI,YACJC,OAAQrB,IAAcP,EAAOO,EAAY,GACzCsB,MAAOrB,IAAaR,EAAOQ,EAAW,KAGzCC,EACC,sBACEZ,UAAWiB,KAAU,2CACDL,GAAWA,GADV,sCAEDT,GAASA,GAFR,MAKrB,YAKKR,MA+DfA,EAAOsC,aAAe,CACpBnB,IAAK,Q,iCCzJP,OAAe,cAA0B,yC,mLCO5BoB,EAAiBC,0B,GAGXC,YAAoBF,EAAeG,U,+BCTzCC,EAAqB,SAAAC,GAAK,OAAI,SAAAC,GAAQ,OAAIA,EAAS,CAAEC,KAAM,uBAAwBF,YAGnFG,EAAsB,SAAAH,GAAK,OAAI,SAAAC,GAAQ,OAAIA,EAAS,CAAEC,KAAM,wBAAyBF,YAGrFI,EAAmB,SAAAJ,GAAK,OAAI,SAAAC,GAAQ,OAAIA,EAAS,CAAEC,KAAM,qBAAsBF,Y,gBCiF7EK,EA3EO,SAAA/C,GAAU,IAAD,EAErBgD,EAAqEhD,EAArEgD,OAAQC,EAA6DjD,EAA7DiD,SAAUC,EAAmDlD,EAAnDkD,UAAWC,EAAwCnD,EAAxCmD,aAAcC,EAA0BpD,EAA1BoD,WAAYC,EAAcrD,EAAdqD,UAGzDV,EAAWW,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,KAC7BC,EAAcH,EAAMI,OACpBC,EAAeL,EAAMP,OAAOY,aAG5B5C,EAAiB,qBAAXgC,GAAkCE,EAAoBW,WAAR,MAiC1D,OAfAC,qBAAU,WAYR,OAXIT,IACEA,EAAUO,cACZjB,EAASF,EAAmBY,EAAUO,eAEpCP,EAAUU,eACZpB,EAASE,EAAoBQ,EAAUU,gBAErCV,EAAUW,YACZrB,EAASG,EAAiBO,EAAUW,cAGjC,WA1BHX,IACEA,EAAUO,cACZjB,EAASF,EAAmB,SAE1BY,EAAUU,eACZpB,EAASE,GAAqBQ,EAAUU,gBAEtCV,EAAUW,YACZrB,EAASG,GAAkBO,EAAUW,iBAmBxC,IAGD,sBACE7D,UAAWiB,IAAW,uCAAD,mBAClB+B,EAAeA,GADG,cAEnB,eAAgBO,EAAYO,MAAMC,QAFf,IADvB,UAME,qBAAK/D,UAAU,oBACf,qBAAKA,UAAU,yBACf,qBACEA,UAAWiB,IAAW,aACpB,mBAAoB8B,EACpB,uBAAwBA,EACxB,gBAAkC,UAAjBU,GAHE,qCAIYR,GAA8B,SAAfA,GAAyBA,EAAWc,SALtF,SAQE,cAAClD,EAAD,2BAEkB,qBAAXgC,GAAkCE,EAEnC,GADA,CAAE/C,UAAWiB,IAAW,CAAE,gBAAiB8B,MAHjD,aAOGD,W,iBCxELkB,EAAS,CACb,CACEC,KAAM,QACNC,UAAWC,gBAAK,kBAAM,gEAExB,CACEF,KAAM,OACNC,UAAWC,gBAAK,kBAAM,yDAExB,CACEF,KAAM,oBACNC,UAAWC,gBAAK,kBAAM,gEAExB,CACEF,KAAM,SACNC,UAAWC,gBAAK,kBAAM,wDACtBtB,OAAQ,eAEV,CACEoB,KAAM,SACNC,UAAWC,gBAAK,kBAAM,iCACtBtB,OAAQ,gB,gBCIGuB,EA5BK,SAAC,GAA2B,IAAzBtB,EAAwB,EAAxBA,SAAwB,+BAErBuB,eAFqB,gCAKXC,oBAAS,IALE,mBAKtCC,EALsC,KAK3BC,EAL2B,KAa7C,OALAb,qBAAU,WAER,OADAa,GAAa,GACN,kBAAMA,GAAa,MACzB,IAEED,EAKH,qBAAKvE,UAAU,aAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,eAAf,SAA+B8C,UAP9B,M,2GCgVI2B,G,OAtVI,SAAA5E,GAAS,IAGxB6E,EAoBE7E,EApBF6E,KACAC,EAmBE9E,EAnBF8E,QACAC,EAkBE/E,EAlBF+E,MACAC,EAiBEhF,EAjBFgF,SACAhC,EAgBEhD,EAhBFgD,OACAiC,EAeEjF,EAfFiF,UACAC,EAcElF,EAdFkF,WACAC,EAaEnF,EAbFmF,cACAC,EAYEpF,EAZFoF,WACAC,EAWErF,EAXFqF,cACAC,EAUEtF,EAVFsF,YACAC,EASEvF,EATFuF,eACAC,EAQExF,EARFwF,SACAC,EAOEzF,EAPFyF,YACA7B,EAME5D,EANF4D,aACA8B,EAKE1F,EALF0F,gBACA3B,EAIE/D,EAJF+D,cACA4B,EAGE3F,EAHF2F,iBACAvC,EAEEpD,EAFFoD,WACAwC,EACE5F,EADF4F,cAtBwB,EA0BkBnB,oBAAS,GA1B3B,mBA0BnBoB,EA1BmB,KA0BHC,EA1BG,KA6BpBC,EAAe,SAAApE,GACnBA,EAAEqE,iBACFF,GAAmBD,IAqJfI,EAAoB,CACxB,CAAEvD,MAAO,SAAUwD,MAAO,QAC1B,CAAExD,MAAO,aAAcwD,MAAO,gBAC9B,CAAExD,MAAO,SAAUwD,MAAO,WAC1B,CAAExD,MAAO,OAAQwD,MAAO,SAIpBC,EAAkBF,EAAkBG,MAAK,SAAAC,GAAC,OAAIA,EAAE3D,QAAUU,KAEhE,OACE,sBACEjD,UAAWiB,IAAW,+BAAgC,CACpDkF,KAAMT,IAFV,UAKE,mBAAGU,KAAK,IAAIpG,UAAU,qEAAqEqG,QAAST,EAApG,SACE,cAAC,IAAD,CAAUzF,KAAM,GAAIH,UAAU,cAEhC,eAAC,IAAD,CAAkBA,UAAU,qBAA5B,UACE,sBAAKA,UAAU,qDAAf,UACE,oBAAIA,UAAU,OAAd,8BACA,mBAAGA,UAAU,MAAb,8CACA,mBAAGoG,KAAK,IAAIpG,UAAU,mBAAmBqG,QAAST,EAAlD,SACE,cAAC,IAAD,SAIJ,uBAEA,sBAAK5F,UAAU,OAAf,UACE,eAACsG,EAAA,EAAD,CAAWtG,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,kBACA,qBAAKA,UAAU,SAAf,SAlLe,WACvB,IAAMuG,EAAW,CACf,CACEC,KAAM,QACNT,MAAO,QACPU,QAAkB,UAAT/B,GAEX,CACE8B,KAAM,WACNT,MAAO,WACPU,QAAkB,aAAT/B,GAEX,CACE8B,KAAM,OACNT,MAAO,OACPU,QAAkB,SAAT/B,GAEX,CACE8B,KAAM,YACNT,MAAO,YACPU,QAAkB,cAAT/B,IAIb,OAAO6B,EAASG,KAAI,SAACC,EAAOC,GAC1B,IAAMC,EAAkBD,IAAUL,EAASxC,OAAS,EAEpD,MAAe,qBAAXlB,GAAgD,cAAf8D,EAAMH,KAClC,KAIP,cAACM,EAAA,EAAD,CAEErE,KAAK,QACLsE,GAAIJ,EAAMH,KACVT,MAAOY,EAAMZ,MACbU,QAASE,EAAMF,QACfO,SAAU,kBAAMrC,EAAQgC,EAAMH,OAC9BxG,UAAWiB,IAAW,CAAE,OAAQ4F,KAN3BD,MAiJsBK,QAG3B,eAACX,EAAA,EAAD,CAAWtG,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,2BACA,sBAAKA,UAAU,SAAf,UACE,cAAC8G,EAAA,EAAD,CACErE,KAAK,QACLsE,GAAG,aACH/G,UAAU,OACV+F,MAAM,aACNU,QAA0B,SAAjBhD,EACTuD,SAAU,kBAAMzB,EAAgB,WAElC,cAACuB,EAAA,EAAD,CACErE,KAAK,QACLsE,GAAG,QACHhB,MAAM,QACNU,QAA0B,UAAjBhD,EACTuD,SAAU,kBAAMzB,EAAgB,kBAKtC,cAACe,EAAA,EAAD,CAAWtG,UAAU,OAArB,SACE,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,gCAAb,iBACA,cAAC8G,EAAA,EAAD,CAAarE,KAAK,SAASsE,GAAG,MAAMP,KAAK,MAAMC,QAAS7B,EAAOoC,SAAU,kBAAMnC,GAAUD,WAI7F,cAAC0B,EAAA,EAAD,CAAWtG,UAAU,OAArB,SACE,sBAAKA,UAAU,oDAAf,UACE,mBAAGA,UAAU,wBAAb,+BACA,cAAC,IAAD,CACEkH,MAAOC,IACPnH,UAAU,eACVoH,gBAAgB,SAChBC,aAAcvB,EAAkB,GAChCvD,MAAOyD,EACPsB,QAASxB,EACTyB,aAAa,EACbP,SAAU,gBAAGzE,EAAH,EAAGA,MAAH,OAAekD,EAAclD,cAM/C,uBAEA,sBAAKvC,UAAU,OAAf,UACE,mBAAGA,UAAU,mBAAb,yBACA,cAACsG,EAAA,EAAD,CAAWtG,UAAU,OAArB,SACE,sBAAKA,UAAU,4BAAf,UACE,cAAC8G,EAAA,EAAD,CACErE,KAAK,QACLsE,GAAG,kBACHhB,MAAM,WACNU,QAAoB,mBAAX5D,EACTmE,SAAU,kBAAMlC,EAAU,aAC1B9E,UAAU,SAEZ,cAAC8G,EAAA,EAAD,CACErE,KAAK,QACLsE,GAAG,oBACHhB,MAAM,aACNU,QAAoB,qBAAX5D,EACTmE,SAAU,kBAAMlC,EAAU,sBAIpB,qBAAXjC,EACC,cAACyD,EAAA,EAAD,CAAWtG,UAAU,OAArB,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,gCAAb,4BACA,cAAC8G,EAAA,EAAD,CACErE,KAAK,SACLsE,GAAG,iBACHP,KAAK,iBACLC,QAAS7C,EACToD,SAAU,kBAAMxB,GAAkB5B,WAItC,KAEJ,cAAC0C,EAAA,EAAD,CAAWtG,UAAU,OAArB,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,gCAAb,yBACA,cAAC8G,EAAA,EAAD,CACErE,KAAK,SACLsE,GAAG,cACHP,KAAK,cACLC,QAASpB,EACT2B,SAAU,kBAAM1B,GAAaD,cAMrC,uBAEA,sBAAKrF,UAAU,OAAf,UACc,qBAAX6C,EACC,eAACyD,EAAA,EAAD,CAAWtG,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,0BACA,oBAAIA,UAAU,4BAAd,SA7OQ,CAAC,QAAS,UAAW,YAAa,UAAW,SAAU,OAAQ,UAAW,QAE3E0G,KAAI,SAAA3G,GAAK,OACxB,oBAEEC,UAAWiB,IAAW,gBAAD,OAAiBlB,GAAS,CAC7CyH,SAAUrC,IAAgBpF,EAC1B0H,OAAkB,UAAV1H,IAEVsG,QAAS,kBAAMjB,EAAerF,KALzBA,WA2OC,KAEJ,eAACuG,EAAA,EAAD,CAAWtG,UAAU,OAArB,UACE,oBAAGA,UAAU,mBAAb,UAA4C,qBAAX6C,EAAgC,OAAS,SAA1E,WACA,qBAAK7C,UAAU,SAAf,SApOoB,WAC5B,IAAM0H,EAAgB,CACpB,CACElB,KAAM,WACNT,MAAO,WACPU,QAAwB,aAAf1B,GAEX,CACEyB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAf1B,GAEX,CACEyB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAf1B,GAEX,CACEyB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAf1B,IAIb,OAAO2C,EAAchB,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUc,EAAc3D,OAAS,EAEzD,MAAe,qBAAXlB,GAAgD,WAAf8D,EAAMH,KAClC,KAIP,cAACM,EAAA,EAAD,CAEErE,KAAK,QACLsE,GAAIJ,EAAMH,KACVT,MAAOY,EAAMZ,MACbU,QAASE,EAAMF,QACfO,SAAU,kBAAMhC,EAAc2B,EAAMH,OACpCxG,UAAWiB,IAAW,CAAE,OAAQ4F,KAN3BD,MAmMsBe,WAI7B,uBAEA,qBAAK3H,UAAU,OAAf,SACE,eAACsG,EAAA,EAAD,CAAWtG,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,yBACA,qBAAKA,UAAU,SAAf,SA/LoB,WAC5B,IAAM4H,EAAgB,CACpB,CACEpB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAfxB,GAEX,CACEuB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAfxB,GAEX,CACEuB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAfxB,IAIb,OAAO2C,EAAclB,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUgB,EAAc7D,OAAS,EAEzD,OACE,cAAC+C,EAAA,EAAD,CAEErE,KAAK,QACLsE,GAAE,iBAAYJ,EAAMH,MACpBT,MAAOY,EAAMZ,MACbU,QAASE,EAAMF,QACfO,SAAU,kBAAM9B,EAAcyB,EAAMH,OACpCxG,UAAWiB,IAAW,CAAE,OAAQ4F,KAN3BD,MAuKsBiB,kB,SCvUtBC,EAlBA,WACb,OACE,oBAAG9H,UAAU,gBAAb,UACE,uBAAMA,UAAU,gDAAhB,6BACe,IAAI+H,MAAOC,cAAe,IACvC,mBAAG5B,KAAK,8CAA8C6B,OAAO,SAASC,IAAI,sBAA1E,uBAGA,sBAAMlI,UAAU,2BAAhB,sCAEF,uBAAMA,UAAU,mCAAhB,qCAEE,cAAC,IAAD,CAAOG,KAAM,Y,wEC8CNgI,EAxCM,WAEnB,IAAM3F,EAAWW,cAFQ,EAKOmB,mBAAS,MALhB,mBAKlB8D,EALkB,KAKRC,EALQ,KAQzB1E,qBAAU,WACiB,OAArB2E,eACFD,EAAYE,KAAKC,MAAMC,aAAaC,QAAQ,gBAE7C,IAGiBN,GAAYA,EAASO,QAAWC,UAEpD,OACE,eAACC,EAAA,EAAD,CAAsB/H,IAAI,KAAKd,UAAU,yBAAzC,UACE,eAAC8I,EAAA,EAAD,CAAgB1C,KAAK,IAAItF,IAAI,IAAId,UAAU,8BAA8BqG,QAAS,SAAA7E,GAAC,OAAIA,EAAEqE,kBAAzF,UACE,sBAAK7F,UAAU,4BAAf,UACE,sBAAMA,UAAU,6BAAhB,SAA+CoI,GAAYA,EAAQ,UAAiB,aACpF,sBAAMpI,UAAU,cAAhB,SAAgCoI,GAAYA,EAASW,MAAS,aAEhE,cAAC,IAAD,CAAQhJ,MAAM,UAAUM,QAAQ,UAElC,eAAC2I,EAAA,EAAD,CAAcC,OAAK,EAAnB,UACE,eAACC,EAAA,EAAD,CAAcpI,IAAKqI,IAAMC,GAAG,oBAA5B,UACE,cAAC,IAAD,CAAMjJ,KAAM,GAAIH,UAAU,UAC1B,sBAAMA,UAAU,eAAhB,wBAEF,eAACkJ,EAAA,EAAD,CAAcpI,IAAKqI,IAAMC,GAAG,SAAS/C,QAAS,kBAAM7D,GCxCnD,SAAAA,GACLA,EAAS,CAAEC,KAAM,WAGjBgG,aAAaY,WAAW,gBDoCpB,UACE,cAAC,IAAD,CAAOlJ,KAAM,GAAIH,UAAU,UAC3B,sBAAMA,UAAU,eAAhB,8B,6CEVKsJ,GAnCI,SAAAzJ,GAAS,IAElB6E,EAAqC7E,EAArC6E,KAAMC,EAA+B9E,EAA/B8E,QAAS4E,EAAsB1J,EAAtB0J,kBAGjBC,EAAe,WACnB,MAAa,SAAT9E,EACK,cAAC,IAAD,CAAK1E,UAAU,QAAQqG,QAAS,kBAAM1B,EAAQ,YAE9C,cAAC,IAAD,CAAM3E,UAAU,QAAQqG,QAAS,kBAAM1B,EAAQ,YAI1D,OACE,eAAC,WAAD,WACE,oBAAI3E,UAAU,iDAAd,SACE,cAACyJ,EAAA,EAAD,CAASzJ,UAAU,sBAAnB,SACE,cAAC0J,EAAA,EAAD,CAAS1J,UAAU,gDAAgDqG,QAAS,kBAAMkD,GAAkB,IAApG,SACE,cAAC,IAAD,CAAMvJ,UAAU,gBAItB,qBAAKA,UAAU,6CAAf,SACE,cAACyJ,EAAA,EAAD,CAASzJ,UAAU,oBAAnB,SACE,cAAC0J,EAAA,EAAD,CAAS1J,UAAU,iBAAnB,SACE,cAACwJ,EAAD,UAIN,oBAAIxJ,UAAU,4CAAd,SACE,cAAC,EAAD,UCtBO2J,GAXK,SAAA9J,GAAS,IAEnB6E,EAAqC7E,EAArC6E,KAAMC,EAA+B9E,EAA/B8E,QAAS4E,EAAsB1J,EAAtB0J,kBAEvB,OACE,cAAC,WAAD,UACE,cAAC,GAAD,CAAY7E,KAAMA,EAAMC,QAASA,EAAS4E,kBAAmBA,O,oBCVpD,IACb,CACExC,GAAI,OACJ6C,MAAO,OACPtJ,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClB0J,QAAS,SAEX,CACE9C,GAAI,aACJ6C,MAAO,cACPtJ,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClB0J,QAAS,iB,oBCmDEC,GAtDY,SAAAjK,GAAS,IAE1B+D,EAAgF/D,EAAhF+D,cAAe4B,EAAiE3F,EAAjE2F,iBAAkB+D,EAA+C1J,EAA/C0J,kBAAmBQ,EAA4BlK,EAA5BkK,aAAcC,EAAcnK,EAAdmK,UAG1ErG,qBAAU,YACHqG,GAAapG,GAAemG,EAAa,MAC7C,CAACC,EAAWpG,IAGf,IAAMqG,EAAU,WACd,OAAKrG,EAWD,cAAC,KAAD,CACEzD,KAAM,GACN+J,YAAU,cACVlK,UAAU,6CACVqG,QAAS,kBAAMb,GAAiB,MAblC,cAAC,KAAD,CACErF,KAAM,GACN+J,YAAU,cACVlK,UAAU,6CACVqG,QAAS,kBAAMb,GAAiB,OAexC,OACE,qBAAKxF,UAAU,gBAAf,SACE,qBAAIA,UAAU,0BAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,eAAC,IAAD,CAASoJ,GAAG,IAAIpJ,UAAU,eAA1B,UACE,sBAAMA,UAAU,aAAhB,SACE,qBAAK6B,IAAKsI,IAAYC,IAAIC,aAAcvI,IAAI,WAE9C,oBAAI9B,UAAU,kBAAd,SAAiCmK,IAAYC,IAAIE,eAGrD,oBAAItK,UAAU,sBAAd,SACE,sBAAKA,UAAU,4CAAf,UACE,cAACiK,EAAD,IACA,cAAC,IAAD,CAAG5D,QAAS,kBAAMkD,GAAkB,IAAQvJ,UAAU,uCAAuCG,KAAM,gB,mBCpBlGoK,GAAkB,SAACC,EAAMC,EAAYC,GAChD,OACED,IAAeD,GACdE,GAAeA,EAAYC,MAAQD,EAAYC,KAAKd,SAAWa,EAAYC,KAAKd,UAAYW,GAmBpFI,GAAmB,SAAnBA,EAAoB9H,EAAU2H,EAAYC,GACrD,OAAO5H,EAAS+H,MAAK,SAAAC,GAEnB,OAAIA,EAAMhI,SACD8H,EAAiBE,EAAMhI,SAAU2H,EAAYC,GAG/CH,GAAgBO,EAAMjB,QAASY,EAAYC,OA+BzCK,GAAS,SAATA,EAAUC,EAAYP,EAAYC,GAC7C,IAAIO,EAkBJ,OAjBAD,EAAWH,MAAK,SAAAC,GACd,IAAIhI,EAEJ,OAAIgI,EAAMhI,WAAaA,EAAWiI,EAAOD,EAAMhI,SAAU2H,EAAYC,IAC3DO,EAAS,CACflE,GAAI+D,EAAM/D,GACVjE,YAKAyH,GAAgBO,EAAMjB,QAASY,EAAYC,GACrCO,EAAS,CACflE,GAAI+D,EAAM/D,SAFd,KAMKkE,GAOIC,GAAgB,SAACC,EAAKC,GACjC,IAAMC,EAAM,GAgBZ,OAfgB,SAAVC,EAAWH,EAAKI,GACpB,IAAK,IAAMC,KAAOL,EAAK,CACrB,IAAM5I,EAAQ4I,EAAIK,QACJtK,IAAVqB,IACEA,GAA0B,kBAAVA,EAClB+I,EAAQ/I,EAAOiJ,GAEXA,IAAQJ,GACVC,EAAI5J,KAAKc,KAMnB+I,CAAQH,GACDE,GCrBMI,GAxGa,SAAC,GAYtB,IAXLC,EAWI,EAXJA,KAEAC,GASI,EAVJC,YAUI,EATJD,gBACAE,EAQI,EARJA,WACAC,EAOI,EAPJA,cAEA/B,GAKI,EANJgC,UAMI,EALJhC,cACAiC,EAII,EAJJA,kBACAC,EAGI,EAHJA,WACAvB,EAEI,EAFJA,YACAwB,EACI,EADJA,kBAGMC,EAAUT,EAAKU,aAAe,IAAM1C,IAGpC2C,EAAWC,cACX7B,EAAa4B,EAASE,SAGtBnB,EAAQoB,YAAU/B,EAAY,CAClCxG,KAAK,GAAD,OAAKyH,EAAK7B,QAAV,WACJ4C,OAAO,EACPC,QAAQ,IA+BV,OARA/I,qBAAU,WACR,GAA0B,OAAtBuI,EAA4B,CAC9BJ,EAAcI,GACd,IAAMS,EAtBY,SAAC3B,EAAYP,GACjC,IAAMmC,EAAU7B,GAAOC,EAAYP,EAAYC,GAE/C,OADmBQ,GAAc0B,EAAS,MAoB5BC,CAAc7B,GAAYP,GACtCkB,EAAe,aAAIgB,OAEpB,CAACN,IAGF,oBACErM,UAAWiB,IAAW,CACpB,YAAayK,EAAK5I,SAClBgK,SAAUpB,EAAKoB,SACfC,OAAQrB,EAAK7B,UAAYgC,IAJ7B,SAOE,eAACM,EAAD,yBACEnM,UAAU,4BACViI,OAAQyD,EAAKsB,OAAS,cAAW9L,IAEN,IAAtBwK,EAAKU,aACN,CACEhG,KAAMsF,EAAK7B,SAAW,KAExB,CACET,GAAIsC,EAAK7B,SAAW,IACpBoD,SAAU,SAAC7B,EAAOiB,GAChB,IAAKjB,EACH,OAAO,EAGLA,EAAM8B,KAAqB,KAAd9B,EAAM8B,KAAc9B,EAAM8B,MAAQxB,EAAK7B,UACtDqC,EAAoBR,EAAK7B,YAhBrC,IAqBExD,QAAS,SAAA7E,GACFkK,EAAK7B,QAAQ9F,QAChBvC,EAAEqE,iBAEJoG,EArDiB,SAAApC,GACvB,IAAM+C,EAAU7B,GAAOC,GAAYnB,EAASuB,GAC5CY,EAAkBN,EAAK3E,GAAI6F,GAmDRO,CAAiBzB,EAAK7B,UA9CzC8B,EAAe,IACf5B,EAAa,MAoBX,UA4BG2B,EAAKpL,KACN,sBAAMN,UAAU,0BAAhB,SAA2C0L,EAAK9B,QAE/C8B,EAAK0B,OAAS1B,EAAKlL,UAClB,cAAC6M,GAAA,EAAD,CAAOrN,UAAU,eAAeD,MAAO2L,EAAK0B,MAAOxL,MAAI,EAAvD,SACG8J,EAAKlL,YAEN,Y,UC6BG8M,GAhIc,SAAC,GAavB,IA4DsBvG,EAxE3B2E,EAYI,EAZJA,KACAE,EAWI,EAXJA,YACAD,EAUI,EAVJA,eACAE,EASI,EATJA,WACAC,EAQI,EARJA,cACAC,EAOI,EAPJA,UACAhC,EAMI,EANJA,aACAkC,EAKI,EALJA,WACArI,EAII,EAJJA,cACAoG,EAGI,EAHJA,UACAU,EAEI,EAFJA,YACAwB,EACI,EADJA,kBAGMzB,EAAa6B,cAAcC,SA2B3BP,EAAoB,SAACN,EAAMO,GAC/B,IACIsB,EADAC,EAAY5B,EAGZK,GACFsB,EAAarC,GAAce,EAAY,MACvCuB,EAAYD,GAEZC,EAAUC,SAAS/B,GAAQ8B,EAAUE,OAAOF,EAAUG,QAAQjC,GAAO,GAAK8B,EAAU/L,KAAKiK,GAI3F,IAAMkC,EAAU7B,EAAU8B,QAAO,SAAAC,GAAG,OAAKN,EAAUC,SAASK,MAC5D/D,EAAa,aAAI6D,IAGjBjC,EAAe,aAAI6B,KAIfO,EAAkB,SAACvM,EAAGkK,GACrBE,GAAeA,EAAY6B,SAAS/B,EAAK3E,KAAQ6D,GAAiBc,EAAK5I,SAAU2H,EAAYC,GAChGsB,EAAkBN,EAAK3E,IA9CH,SAAC2E,EAAMO,GAC7B,IACIsB,EADAK,EAAU7B,EAGVE,IACFsB,EAAarC,GAAce,EAAY,OAC5B+B,MAITjC,GAAawB,GAAcxB,EAAU,KAAOwB,EAAW,GACzDxB,EAAU0B,SAAS/B,GAAQkC,EAAQF,OAAOE,EAAQD,QAAQjC,GAAO,GAAKkC,EAAQnM,KAAKiK,IAEnFkC,EAAU,GACL7B,EAAU0B,SAAS/B,IACtBkC,EAAQnM,KAAKiK,IAKjB3B,EAAa,aAAI6D,IA4BfK,CAAgBvC,EAAK3E,GAAIkF,GAG3BzK,EAAEqE,kBAgBJ,OACE,qBACE7F,UAAWiB,IAAW,mBAAoB,CACxCkF,MAfqBY,EAeI2E,EAAK3E,GAd7BnD,GAAiBoG,IAAgC,IAAlBpG,KAC9BgI,EAAY6B,SAAS1G,KAAOgF,EAAU0B,SAAS/B,EAAK3E,WAAxD,IAGS6E,EAAY6B,SAAS1G,KAAOnD,IAA+B,IAAdoG,IAG/C,MAQL,sBAAuB4B,EAAY6B,SAAS/B,EAAK3E,IACjD,uBAAwB6E,EAAY6B,SAAS/B,EAAK3E,KAAOgF,EAAU0B,SAAS/B,EAAK3E,MAJrF,UAOE,eAAC,IAAD,CAAM/G,UAAU,4BAA4BoJ,GAAG,IAAI/C,QAAS,SAAA7E,GAAC,OAAIuM,EAAgBvM,EAAGkK,IAApF,UACGA,EAAKpL,KACN,sBAAMN,UAAU,2BAAhB,SAA4C0L,EAAK9B,QAEhD8B,EAAK0B,OAAS1B,EAAKlL,UAClB,cAAC6M,GAAA,EAAD,CAAOrN,UAAU,eAAeD,MAAO2L,EAAK0B,MAAOxL,MAAI,EAAvD,SACG8J,EAAKlL,YAEN,QAIN,oBAAIR,UAAU,eAAd,SACE,cAACkO,GAAA,EAAD,CAAUC,OAASvC,GAAeA,EAAY6B,SAAS/B,EAAK3E,KAASgF,GAAaA,EAAU0B,SAAS/B,EAAK3E,IAA1G,SACE,cAACqH,GAAD,CACEC,MAAO3C,EAAK5I,SACZ8I,YAAaA,EACbD,eAAgBA,EAChBI,UAAWA,EACXhC,aAAcA,EACdiC,kBAAmBA,EACnBC,WAAYP,EACZ9H,cAAeA,EACfoG,UAAWA,EACXU,YAAaA,EACbwB,kBAAmBA,EACnBL,WAAYA,EACZC,cAAeA,Y,UCzHZwC,GATsB,SAAC,GAAqB,IAAnB5C,EAAkB,EAAlBA,KAAkB,EAAZ9E,MAC5C,OACE,qBAAI5G,UAAU,oBAAd,UACE,+BAAO0L,EAAK6C,SACZ,cAAC,KAAD,CAAgBvO,UAAU,gCCmBjBwO,GAlBc,SAAA3O,GAE3B,IAAM4O,EAAa,CACjBH,gCACAhB,wBACA7B,wBAUF,OANuB5L,EAAMwO,MAAM3H,KAAI,SAACgF,EAAM9E,GAC5C,IAAM8H,EAAUD,EJV+B,SAAA/C,GACjD,OAAIA,EAAK6C,OAAe,+BACpB7C,EAAK5I,SAAiB,uBACnB,sBIOsB6L,CAAwBjD,IAEnD,OAAO,cAACgD,EAAD,aAAsChD,KAAMA,GAAU7L,GAAxC6L,EAAK3E,IAAM2E,EAAK6C,YC6E1BK,GAnFC,SAAA/O,GAAS,IAEf+D,EAA8D/D,EAA9D+D,cAAe8G,EAA+C7K,EAA/C6K,YAAamE,EAAkChP,EAAlCgP,KAAM3C,EAA4BrM,EAA5BqM,kBAAmBxH,EAAS7E,EAAT6E,KAFtC,EAKWJ,mBAAS,IALpB,mBAKhByH,EALgB,KAKLhC,EALK,OAMezF,mBAAS,IANxB,mBAMhBsH,EANgB,KAMHD,EANG,OAOarH,mBAAS,MAPtB,mBAOhBuH,EAPgB,KAOJC,EAPI,OAUWxH,oBAAS,GAVpB,mBAUhB0F,EAVgB,KAUL8E,EAVK,KAajBC,EAAYC,iBAAO,MAsBzB,OACE,cAAC,WAAD,UACE,qBACEhP,UAAWiB,IAAW,kDAAmD,CACvEgO,SAAUjF,IAA+B,IAAlBpG,EACvB,aAAuB,cAATc,GAAiC,SAATA,EACtC,YAAsB,cAATA,GAAiC,SAATA,IAEvCwK,aA3Be,WACftL,GACFkL,GAAa,IA0BXK,aAAc,kBAAML,GAAa,IAPnC,SASGD,GAGC,eAAC,WAAD,WAEE,cAAC,GAAD,aAAoB9E,aAAcA,EAAcC,UAAWA,GAAenK,IAE1E,qBAAKG,UAAU,gBAAgBF,IAAKiP,IAEpC,cAAC,IAAD,CACE/O,UAAU,oBACVsH,QAAS,CAAE8H,kBAAkB,GAC7BC,UAAW,SAAAC,GAAS,OAnCb,SAAAA,GACbP,GAAaO,EAAUC,UAAY,EAChCR,EAAUxD,QAAQiE,UAAUC,SAAS,YACxCV,EAAUxD,QAAQiE,UAAUE,IAAI,WAG9BX,EAAUxD,QAAQiE,UAAUC,SAAS,YACvCV,EAAUxD,QAAQiE,UAAUG,OAAO,WA4BLC,CAAWN,IAHrC,SAKE,oBAAItP,UAAU,6BAAd,SACE,cAACoO,GAAD,CACEC,MAAOrD,GACPY,YAAaA,EACbD,eAAgBA,EAChBE,WAAYA,EACZC,cAAeA,EACfC,UAAWA,EACXhC,aAAcA,EACdW,YAAaA,EACb9G,cAAeA,EACfoG,UAAWA,EACXkC,kBAAmBA,gBC/ExB2D,GAAS,WAEpB,IAAMrN,EAAWW,cACXyB,EAAQvB,aAAY,SAAAC,GAAK,OAAIA,EAAMT,OAAOiN,SA0BhD,OAZAnM,qBAAU,WAER,IAAMoM,EAAUC,SAASC,qBAAqB,QAAQ,GAGlDrL,EACFmL,EAAQG,aAAa,MAAO,OAE5BH,EAAQG,aAAa,MAAO,SAE7B,CAACtL,IAEG,CAACA,EAvBS,SAAArC,GACf,IAEE,IAAM4N,EAAe5N,aAAiB6N,SAAW7N,EAAMqC,GAASrC,EAChEC,ElBPmB,SAAAD,GAAK,OAAI,SAAAC,GAAQ,OAAIA,EAAS,CAAEC,KAAM,aAAcF,WkBO9D8N,CAAUF,IACnB,MAAOG,GAEPC,QAAQC,IAAIF,OCdLG,GAAgB,WAAM,MAEGnM,oBAAS,WAC3C,IACE,OAAO6F,IAAYtH,OAAOW,OAAOf,KACjC,MAAO6N,GAGP,OADAC,QAAQC,IAAIF,GACLnG,IAAYtH,OAAOW,OAAOf,SARJ,mBAE1BsC,EAF0B,KAEdC,EAFc,KA0BjC,MAAO,CAACD,EAbS,SAAAxC,GACf,IAEE,IAAM4N,EAAe5N,aAAiB6N,SAAW7N,EAAMwC,GAAcxC,EAGrEyC,EAAcmL,GACd,MAAOG,GAEPC,QAAQC,IAAIF,OCtBLI,GAAgB,WAAM,MAEGpM,oBAAS,WAC3C,IACE,OAAO6F,IAAYtH,OAAO8N,OAAOlO,KACjC,MAAO6N,GAGP,OADAC,QAAQC,IAAIF,GACLnG,IAAYtH,OAAO8N,OAAOlO,SARJ,mBAE1BwC,EAF0B,KAEdC,EAFc,KA0BjC,MAAO,CAACD,EAbS,SAAA1C,GACf,IAEE,IAAM4N,EAAe5N,aAAiB6N,SAAW7N,EAAM0C,GAAc1C,EAGrE2C,EAAciL,GACd,MAAOG,GAEPC,QAAQC,IAAIF,OCtBLM,GAAiB,WAAM,MAEItM,oBAAS,WAC7C,IACE,OAAO6F,IAAYtH,OAAOW,OAAOqN,gBACjC,MAAOP,GAGP,OADAC,QAAQC,IAAIF,GACLnG,IAAYtH,OAAOW,OAAOqN,oBARH,mBAE3B1L,EAF2B,KAEdC,EAFc,KA0BlC,MAAO,CAACD,EAbS,SAAA5C,GACf,IAEE,IAAM4N,EAAe5N,aAAiB6N,SAAW7N,EAAM4C,GAAe5C,EAGtE6C,EAAe+K,GACf,MAAOG,GAEPC,QAAQC,IAAIF,OCmMHQ,I,cA7LQ,SAAAjR,GAAS,IAEtBiD,EAAmEjD,EAAnEiD,SAAUU,EAAyD3D,EAAzD2D,OAAQmN,EAAiD9Q,EAAjD8Q,OAAQ9B,EAAyChP,EAAzCgP,KAAMnE,EAAmC7K,EAAnC6K,YAAawB,EAAsBrM,EAAtBqM,kBAFvB,EAKN7H,cALM,mBAKvBK,EALuB,KAKjBC,EALiB,OAMJkL,KANI,mBAMvBjL,EANuB,KAMhBC,EANgB,OAOM4L,KAPN,mBAOvB1L,EAPuB,KAOXC,EAPW,OAQM0L,KARN,mBAQvBzL,EARuB,KAQXC,EARW,OASQ0L,KATR,mBASvBzL,EATuB,KASVC,EATU,OAYId,oBAAS,GAZb,mBAYvBC,EAZuB,KAYZC,EAZY,OAacF,oBAAS,GAbvB,mBAavByM,EAbuB,KAaPxH,EAbO,OAcQjF,mBAAS0M,OAAOC,YAdxB,oBAcvBC,GAduB,MAcVC,GAdU,MAiBxB3O,GAAWW,cACXiO,GAAc/N,aAAY,SAAAC,GAAK,OAAIA,EAAMT,UAGzCwO,GAAoB,WACxBF,GAAeH,OAAOC,aAIlB5E,GAAWC,cACX7I,GAAe2N,GAAY3N,aAC3BG,GAAgBwN,GAAYxN,cAC5ByB,GAAW+L,GAAYvN,WAGvB2B,GAAmB,SAAAsI,GAAG,OAAItL,GAASE,EAAoBoL,KAS7DnK,qBAAU,WACJoN,GAAkBG,GAAc,MAClC3H,GAAkB,KAEnB,CAAC8C,KAGJ1I,qBAAU,gBACOzC,IAAX8P,QACFA,OAAOM,iBAAiB,SAAUD,MAEnC,CAACH,KAGJvN,qBAAU,WAER,OADAa,GAAa,GACN,kBAAMA,GAAa,MACzB,IAGH,IAAM+M,GAAgB,CACpBC,OAAQ,gBACRC,OAAQ,eACRC,OAAQ,iBAiBJC,GAAmC,KAAhBxM,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAKZ,EAIH,8CACEvE,UAAWiB,IAAW,2BAAD,OArBI,CAC3B2Q,SAAU,kBACVH,OAAQ,gBACRD,OAAQ,gBACRE,OAAQ,iBAkB4C3M,IAAe,kBAD5C,YAEjBwM,GAActM,IAAe,iBAE/B,CAEE,uBAAwBiM,IAAe,KACvC,iBAAkBtN,IAAiBsN,IAAe,KAClD,iBAAkBtN,IAAiBsN,GAAc,KAGjD,wBAAyBA,GAAc,KACvC,aAAcH,GAAkBG,GAAc,KAC9C,YAAaH,GAAkBG,GAAc,QAG5C7L,GAAW,CAAE,WAAY,YAAe,IAjB/C,cAmBIA,GAWE,KAVF,cAAC,GAAD,CACEX,KAAMA,EACNmK,KAAMA,EACNjL,cAAeA,GACfmN,eAAgBA,EAChBvL,iBAAkBA,GAClB+D,kBAAmBA,EACnBmB,YAAaA,EACbwB,kBAAmBA,IAIvB,cAAC2F,EAAA,EAAD,CACEC,OAAO,KACPC,MAAgB,SAATrN,EACPsN,KAAe,SAATtN,GAAmBiN,GACzB5R,MAAO4R,GAAmBxM,OAAcjE,EACxClB,UAAWiB,IAAW,2CAAD,OAlDL,CACpB2Q,SAAU,eACVH,OAAQ,YACRD,OAAQ,oBACRE,OAAQ,UA+CuD3M,IAAe,eADrD,mBALvB,SASE,qBAAK/E,UAAU,kCAAf,SACGwD,GAAkB,cAAC,GAAD,CAAiB+F,kBAAmBA,EAAmB7E,KAAMA,EAAMC,QAASA,QAGlG7B,EAGD,qBACE9C,UAAWiB,IAAW,kBAAmB,CACvCgR,KAAMlB,IAER1K,QAAS,kBAAMkD,GAAkB,OAIA,IAAlCY,IAAYtH,OAAOqP,WAClB,cAAC,EAAD,CACExN,KAAMA,EACNC,QAASA,EACTM,WAAYA,EACZC,cAAeA,EACfH,WAAYA,EACZC,cAAeA,EACfG,YAAaA,EACbC,eAAgBA,EAChBR,MAAOA,EACPC,SAAUA,EACVhC,OAAQhD,EAAMgD,OACdiC,UAAWjF,EAAMiF,UACjBO,SAAUA,GACVC,YAxHY,SAAAwI,GAAG,OAAItL,GAASG,EAAiBmL,KAyH7CrK,aAAcA,GACd8B,gBA7HgB,SAAAuI,GAAG,OAAItL,GAASF,EAAmBwL,KA8HnDlK,cAAeA,GACf4B,iBAAkBA,GAClBvC,WAAYpD,EAAMoD,WAClBwC,cAAe5F,EAAM4F,cACrB0E,YAAaA,MAEb,KACJ,wBACEnK,UAAWiB,IAAW,uBAAD,OAAwBsQ,GAActM,IAAe,iBAAmB,CAC3F,SAAyB,WAAfA,IAFd,SAKG0L,GAAkB,cAAC,EAAD,CAAiB1L,WAAYA,EAAYsM,cAAeA,QAG3C,IAAjCpH,IAAYtH,OAAO0M,UAClB,qBAAKvP,UAAU,gBAAf,SACE,cAAC,IAAD,CAAamS,UAAW,IAAKhR,MAAO,CAAEiR,OAAQ,MAA9C,SACE,cAACC,EAAA,EAAD,CAAQrS,UAAU,WAAWD,MAAM,UAAnC,SACE,cAAC,IAAD,CAASI,KAAM,WAInB,SApGC,OCjHI2Q,GAFQ,SAAAjR,GAAK,OAAI,cAAC,GAAD,2BAAYA,GAAZ,aAAoBA,EAAMiD,aCD3C,IACb,CACEiE,GAAI,OACJ6C,MAAO,OACPtJ,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClB0J,QAAS,SAEX,CACE9C,GAAI,aACJ6C,MAAO,MACPtJ,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClB0J,QAAS,SCgFEyI,GAhFe,SAAC,GASxB,IARL5G,EAQI,EARJA,KACA6G,EAOI,EAPJA,gBACA5G,EAMI,EANJA,eACAE,EAKI,EALJA,WACAC,EAII,EAJJA,cACApB,EAGI,EAHJA,YACAwB,EAEI,EAFJA,kBACAsG,EACI,EADJA,QAGMrG,EAAUT,EAAKU,aAAe,IAAM1C,IAGpC2C,EAAWC,cACX7B,EAAa4B,EAASE,SAENhC,GAAgBmB,EAAK7B,QAASY,EAAYC,GAsBhE,OARA/G,qBAAU,WACR,GAA0B,OAAtBuI,EAA4B,CAC9BJ,EAAcI,GACd,IAAMS,EAdY,SAAC3B,EAAYP,GACjC,IAAMmC,EAAU7B,GAAOC,EAAYP,EAAYC,GACzC6C,EAAarC,GAAc0B,EAAS,MAE1C,OADAW,EAAWS,MACJT,EAUOV,CAAc7B,GAAYP,GACtCkB,EAAe,aAAIgB,OAEpB,CAACN,IAGF,oBACErM,UAAWiB,IAAW,WAAY,CAChC8L,OAAQrB,EAAK7B,UAAYgC,EACzBiB,SAAUpB,EAAKoB,WAEjBzG,QAjBuB,kBAAMkM,EAAgB,KAY/C,SAOE,eAACpG,EAAD,yBACEnM,UAAWiB,IAAW,4BAA6B,CACjD,gBAAiBuR,EACjB,YAAaA,IAEf1R,IAAKqL,EACLlE,OAAQyD,EAAKsB,OAAS,cAAW9L,IAEN,IAAtBwK,EAAKU,aACN,CACEhG,KAAMsF,EAAK7B,SAAW,KAExB,CACET,GAAIsC,EAAK7B,SAAW,IACpBoD,SAAU,SAAC7B,EAAOiB,GAChB,IAAKjB,EACH,OAAO,EAGLA,EAAM8B,KAAqB,KAAd9B,EAAM8B,KAAc9B,EAAM8B,MAAQxB,EAAK7B,UACtDqC,EAAoBR,EAAK7B,YApBrC,cA0BG6B,EAAKpL,KACN,+BAAOoL,EAAK9B,e,SC6BL6I,GAvGgB,SAAA5S,GAAS,IAGpC6L,EAYE7L,EAZF6L,KACAgH,EAWE7S,EAXF6S,QACA9G,EAUE/L,EAVF+L,YACAsD,EASErP,EATFqP,aACAC,EAQEtP,EARFsP,aACAwD,EAOE9S,EAPF8S,aACAhH,EAME9L,EANF8L,eACAE,EAKEhM,EALFgM,WACAC,EAIEjM,EAJFiM,cACApB,EAGE7K,EAHF6K,YACA6H,EAEE1S,EAFF0S,gBACArG,EACErM,EADFqM,kBAIIzB,EAAa6B,cAAcC,SAG3BqG,EAAgB,CACpBC,aAAc,CACZC,SAAS,EACTC,GAAI,SAAAC,GACF,IAGeC,EAHTC,EAAalC,OAAOmC,YACxBC,EAAQJ,EAAKK,SAASC,UAAUC,wBAAwBC,IAKtDN,EAAaE,EAJJJ,EAAKS,OAAO1R,OAIW,GAAK,IAEvCkR,EAAY,CACVS,UAFUR,EAAaE,EAAQ,GAG/BO,UAAW,SAIf,IAAMC,EAAQZ,EAAKK,SAASI,OAAOF,wBAOnC,OAJIK,EAAMC,KAAOD,EAAM5R,OAASgP,OAAOC,WAAa,KAAO,GACzD+B,EAAKK,SAASI,OAAOK,QAAQ,aAAatE,UAAUE,IAAI,YAGnD,2BACFsD,GADL,IAEEe,OAAO,eACFd,QAMb,OACE,eAACe,GAAA,EAAD,CACElT,IAAI,KACJd,UAAWiB,IAAW,CACpB,YAAwB,IAAZyR,EACZ,oBAAgC,IAAZA,EACpB,8BACE9H,GAAiBc,EAAK5I,SAAU2H,EAAYC,IAAgBkB,EAAY6B,SAAS/B,EAAK3E,MAE1FoH,OAAQwE,EAAalF,SAAS/B,EAAK3E,IACnCkN,OAAQ,kBAAM/E,EAAaxD,EAAK3E,KAChCmI,aAAc,kBAAMA,EAAaxD,EAAK3E,KACtCoI,aAAc,kBAAMA,EAAazD,EAAK3E,KAXxC,UAaE,eAAC+B,EAAA,EAAD,CACEM,GAAG,IACHtI,IAAKqI,IACLnJ,UAAWiB,IAAW,4CAA6C,CACjE,iBAA6B,IAAZyR,EACjB,YAAwB,IAAZA,IAEdrM,QAAS,SAAA7E,GAAC,OAAIA,EAAEqE,kBAPlB,UASG6F,EAAKpL,KACN,+BAAOoL,EAAK9B,WAEd,cAACZ,EAAA,EAAD,CAAclI,IAAI,KAAKoT,UAAWtB,EAAlC,SACE,cAAC,GAAD,CACEF,SAAS,EACTzG,WAAYP,EACZ2C,MAAO3C,EAAK5I,SACZ+I,WAAYA,EACZD,YAAaA,EACblB,YAAaA,EACbiI,aAAcA,EACdzD,aAAcA,EACdC,aAAcA,EACdrD,cAAeA,EACfH,eAAgBA,EAChB6G,SAAS,EACTD,gBAAiBA,EACjBrG,kBAAmBA,UCvFdiI,GAjBgB,SAAAtU,GAE7B,IAAM4O,EAAa,CACjBgE,0BACAH,0BAUF,OANuBzS,EAAMwO,MAAM3H,KAAI,SAACgF,EAAM9E,GAC5C,IAAM8H,EAAUD,EfIiC,SAAA/C,GACnD,OAAIA,EAAK5I,SAAiB,yBACnB,wBeNsB6L,CAAwBjD,IAEnD,OAAO,cAACgD,EAAD,aAAShD,KAAMA,EAAM9E,MAAOA,GAAyB/G,GAAb6L,EAAK3E,QCmCzCqN,GA1CQ,SAAC,GAAwC,IAAtClI,EAAqC,EAArCA,kBAAmBxB,EAAkB,EAAlBA,YAAkB,EAEzBpG,mBAAS,MAFgB,mBAEtDuH,EAFsD,KAE1CC,EAF0C,OAGvBxH,mBAAS,IAHc,mBAGtDsH,EAHsD,KAGzCD,EAHyC,OAIrBrH,mBAAS,IAJY,mBAItDqO,EAJsD,KAIxCJ,EAJwC,KAoB7D,OACE,qBAAKvS,UAAU,qCAAf,SACE,oBAAIA,UAAU,iBAAiB+G,GAAG,uBAAlC,SACE,cAAC,GAAD,CACE2L,SAAS,EACTrE,MAAOrD,GACPa,WAAYA,EACZD,YAAaA,EACblB,YAAaA,EACbwE,aAtBa,SAAAnI,GACnB,IAAM4F,EAAMgG,EACZhG,EAAIlL,KAAKsF,GACTwL,EAAgB,aAAI5F,KAoBdwC,aAhBa,SAAApI,GACnB,IAAM4F,EAAMgG,EACZhG,EAAIe,OAAOf,EAAIgB,QAAQ5G,GAAK,GAC5BwL,EAAgB,aAAI5F,KAcdgG,aAAcA,EACd7G,cAAeA,EACfH,eAAgBA,EAChB4G,gBAAiBA,EACjBrG,kBAAmBA,SC6JdmI,I,OAxKU,SAAAxU,GAAU,IAAD,EAExBiD,EAAmEjD,EAAnEiD,SAAUU,EAAyD3D,EAAzD2D,OAAQmN,EAAiD9Q,EAAjD8Q,OAAQ9B,EAAyChP,EAAzCgP,KAAM3C,EAAmCrM,EAAnCqM,kBAAmBxB,EAAgB7K,EAAhB6K,YAF3B,EAKRrG,cALQ,mBAKzBK,EALyB,KAKnBC,EALmB,OAMNkL,KANM,mBAMzBjL,EANyB,KAMlBC,EANkB,OAOI4L,KAPJ,mBAOzB1L,EAPyB,KAObC,EAPa,OAQI0L,KARJ,mBAQzBzL,EARyB,KAQbC,EARa,OASM0L,KATN,mBASzBzL,EATyB,KASZC,EATY,OAYEd,oBAAS,GAZX,mBAYzBC,EAZyB,KAYdC,EAZc,OAaYF,oBAAS,GAbrB,mBAazBgQ,EAbyB,KAaTC,GAbS,KAgB1B/R,GAAWW,cACXiO,GAAc/N,aAAY,SAAAC,GAAK,OAAIA,EAAMT,UAGzCY,GAAe2N,GAAY3N,aAC3B4B,GAAW+L,GAAYvN,WAe7BF,qBAAU,WAUR,OATAa,GAAa,GACbwM,OAAOM,iBAAiB,UAAU,WAC5BN,OAAOwD,YAAc,KAAyB,IAAnBF,GAC7BC,IAAkB,GAEhBvD,OAAOwD,YAAc,IACvBD,IAAkB,MAGf,kBAfP/P,GAAa,QACb+P,IAAkB,MAejB,IAGH,IAAMhD,GAAgB,CACpBC,OAAQ,gBACRC,OAAQ,eACRC,OAAQ,iBASJ+C,GAAgB,CACpB7C,SAAU,eACVH,OAAQ,aAGJE,GAAmC,KAAhBxM,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAKZ,EAKH,8CACEvE,UAAWiB,IAAW,6CAAD,OAnBI,CAC3B2Q,SAAU,kBACVH,OAAQ,gBACRD,OAAQ,iBAiB8DzM,IAAe,kBAD9D,YAEjBwM,GAActM,IAAe,gBAFZ,oBAKhBI,GAAW,CAAE,WAAY,YAAe,IAN/C,cAQE,eAACwM,EAAA,EAAD,CACEC,OAAO,KACP9R,UAAWiB,IAAW,kFAAmF,CACvG,kBAAmBqT,IAHvB,WAMI9Q,GACA,qBAAKxD,UAAU,kCAAf,SACE,oBAAIA,UAAU,iBAAd,SACE,cAACyJ,EAAA,EAAD,UACE,eAAC,IAAD,CAAML,GAAG,IAAIpJ,UAAU,eAAvB,UACE,sBAAMA,UAAU,aAAhB,SACE,qBAAK6B,IAAKsI,IAAYC,IAAIC,aAAcvI,IAAI,WAE9C,oBAAI9B,UAAU,kBAAd,SAAiCmK,IAAYC,IAAIE,mBAO3D,qBAAKtK,UAAU,kCAAf,SACGwD,GAAkB,cAAC,GAAD,CAAiBkB,KAAMA,EAAMC,QAASA,SAG3DU,GAeE,KAdF,qBAAKrF,UAAU,0BAAf,SACE,cAAC6R,EAAA,EAAD,CACE/Q,IAAI,MACJgR,OAAO,KACPC,MAAgB,SAATrN,EACPsN,KAAe,SAATtN,GAAmBiN,GACzB3R,UAAWiB,IAAW,6DAAD,mBAClBwT,GAAc1P,GAA6B,WAAfA,GADV,cAEnB,gBAAkB0P,GAAc1P,IAA8B,WAAfA,GAA2C,aAAfA,GAFxD,IALvB,SAUG8J,GAAc,cAAC,GAAD,CAAenE,YAAaA,EAAawB,kBAAmBA,QAKhFpJ,GACkC,IAAlCqH,IAAYtH,OAAOqP,WAClB,cAAC,EAAD,CACExN,KAAMA,EACNC,QAASA,EACTM,WAAYA,EACZC,cAAeA,EACfH,WAAYA,EACZC,cAAeA,EACfG,YAAaA,EACbC,eAAgBA,EAChBR,MAAOA,EACPC,SAAUA,EACVhC,OAAQhD,EAAMgD,OACdiC,UAAWjF,EAAMiF,UACjBO,SAAUA,GACVC,YAjHY,SAAAwI,GAAG,OAAItL,GAASG,EAAiBmL,KAkH7CrK,aAAcA,GACd8B,gBAtHgB,SAAAuI,GAAG,OAAItL,GAASF,EAAmBwL,KAuHnD7K,WAAYpD,EAAMoD,WAClBwC,cAAe5F,EAAM4F,cACrB0E,YAAaA,MAEb,KACJ,wBACEnK,UAAWiB,IAAW,uBAAD,OAAwBsQ,GAActM,IAAe,iBAAmB,CAC3F,SAAyB,WAAfA,IAFd,SAKG0L,GAAkB,cAAC,EAAD,CAAiB1L,WAAYA,EAAYsM,cAAeA,QAG3C,IAAjCpH,IAAYtH,OAAO0M,UAClB,qBAAKvP,UAAU,gBAAf,SACE,cAAC,IAAD,CAAamS,UAAW,IAAKhR,MAAO,CAAEiR,OAAQ,MAA9C,SACE,cAACC,EAAA,EAAD,CAAQrS,UAAU,WAAWD,MAAM,UAAnC,SACE,cAAC,IAAD,CAASI,KAAM,WAInB,SA9FC,OClGIkU,GAFU,SAAAxU,GAAK,OAAI,cAAC,GAAD,2BAAYA,GAAZ,aAAoBA,EAAMiD,aC2N7C4R,GAtMA,WAAM,MClBI,WAAM,MAEOpQ,mBAAS,MAFhB,mBAEtBqQ,EAFsB,KAEVC,EAFU,OAGDtQ,oBAAS,WACnC,IACE,OAAO6F,IAAYtH,OAAOJ,KAC1B,MAAO6N,GAGP,OADAC,QAAQC,IAAIF,GACLnG,IAAYtH,OAAOJ,SATD,mBAGtBI,EAHsB,KAGdiC,EAHc,KA2BvB+P,EAAe,WAEJ,eAAXhS,GAA2BmO,OAAOC,YAAc,OAClDnM,EAAU,YACV8P,EAAc,eAGG,eAAfD,GAA+B3D,OAAOC,YAAc,MACtDnM,EAAU,eAcd,OATAnB,qBAAU,WACRkR,MACC,IAEHlR,qBAAU,WAERqN,OAAOM,iBAAiB,SAAUuD,KACjC,CAAChS,EAAQ8R,IAEL,CAAC9R,EAnCS,SAAAN,GACf,IAEE,IAAM4N,EAAe5N,aAAiB6N,SAAW7N,EAAMM,GAAUN,EAGjEuC,EAAUqL,GACV,MAAOG,GAEPC,QAAQC,IAAIF,MDHYwE,GAFT,mBAEZjS,EAFY,KAEJiC,EAFI,OElBc,WAAM,MAEHR,oBAAS,WAC3C,IACE,OAAO6F,IAAYtH,OAAOkS,iBAC1B,MAAOzE,GAGP,OADAC,QAAQC,IAAIF,GACLnG,IAAYtH,OAAOkS,qBARS,mBAEhC9R,EAFgC,KAEpBwC,EAFoB,KA0BvC,MAAO,CAACxC,EAbS,SAAAV,GACf,IAEE,IAAM4N,EAAe5N,aAAiB6N,SAAW7N,EAAMU,GAAcV,EAGrEkD,EAAc0K,GACd,MAAOG,GAEPC,QAAQC,IAAIF,MFDoB0E,GAHjB,mBAGZ/R,EAHY,KAGAwC,EAHA,KASbwP,GAHUC,qBAAWhT,GAGM,eAAXW,EAA0B,mBAAqB,kBAG/DsS,EAAU,CAAE/Q,cAAa0M,kBAAgBuD,qBAuBzCe,EAAgBjR,gBAAK,kBAAM,kCAG3BkR,EAAQlR,gBAAK,kBAAM,iCA4HzB,OACE,cAAC,IAAD,CAAWmR,SAAUC,GAArB,SACE,eAAC,IAAD,WASE,cAAC,IAAD,CACE9I,OAAK,EACLxI,KAAK,IACLuR,OAAQ,WACN,OAAO,cAAC,IAAD,CAAUpM,G7BnMR,a6BuMb,cAAC,IAAD,CACEqD,OAAK,EACLxI,KAAK,kBACLuR,OAAQ,SAAA3V,GAAK,OACX,cAACsV,EAAQ/Q,YAAT,UACE,cAACgR,EAAD,SA3GHK,OAAOC,KAAKP,GAASzO,KAAI,SAAC7D,EAAQ+D,GAIvC,IAAM+O,EAAYR,EAAQtS,GAJuB,EA7DxB,SAAAA,GAC3B,IAAM+S,EAAe,GACfC,EAAc,GAYpB,OAVI7R,GACFA,EAAO6J,QAAO,SAAAiI,IAERA,EAAMjT,SAAWA,QAA4B3B,IAAjB4U,EAAMjT,QAAwBoS,IAAkBpS,KAC9E+S,EAAanU,KAAKqU,GAClBD,EAAYpU,KAAKqU,EAAM7R,UAKtB,CAAE2R,eAAcC,eAsDiBE,CAAqBlT,GAAnD+S,EAPyC,EAOzCA,aAAcC,EAP2B,EAO3BA,YAQhBnL,EAAc,GAEpB,OACE,cAAC,IAAD,CAAOzG,KAAM4R,EAAb,SACE,cAACF,EAAD,CACEjL,YAAaA,EACb7H,OAAQA,EACRiC,UAAWA,EACX7B,WAAYA,EACZwC,cAAeA,EACfyG,kBAzFgB,KAmFlB,SAQE,cAAC,IAAD,UACG0J,EAAalP,KAAI,SAAAoP,GAChB,OACE,cAAC,IAAD,CAEE7R,KAAM6R,EAAM7R,KACZwI,OAAuB,IAAhBqJ,EAAMrJ,MACb+I,OAAQ,SAAA3V,GAON,OALA4V,OAAOO,OAAOtL,EAAd+K,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACK5V,GADL,IAEE8K,KAAMmL,EAAMnL,QAIZ,cAAC,WAAD,CAAUsL,SAAU,KAApB,SAEE,cAAC,EAAD,iDACEpT,OAAQoS,EACRhS,WAAYA,EACZwC,cAAeA,GAGVqQ,EAAM/S,UACP,CACEA,UAAW+S,EAAM/S,WAEnB,IACC+S,EAAMnL,KACP,CACEzH,UAAW4S,EAAMnL,MAEnB,IACCmL,EAAM9V,UACP,CACEgD,aAAc8S,EAAM9V,WAEtB,IApBN,aAuBE,cAAC8V,EAAM5R,UAAP,eAAqBrE,WApCxBiW,EAAM7R,cAbQ2C,MA+F/B,cAAC,IAAD,CAAO3C,KAAK,IAAIC,UAAWmR,IA5B7B,UGvLSa,UAFH,SAAArW,GAAK,OAAI,cAAC,GAAD,M,iJCFRsW,EAAa,SAAAhL,GAAG,OAAgC,IAA5BsK,OAAOC,KAAKvK,GAAKpH,QAiDrCuE,EAAiB,kBAAMG,aAAaC,QAAQ,aAkB5CvB,EAAoB,SAAAD,GAAK,kCACjCA,GADiC,IAEpCkP,OAAO,2BACFlP,EAAMkP,QADL,IAEJC,UAAW,YACXC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,gB,qGCtEFpS,EAAU,WAAM,MAEHC,oBAAS,WAC/B,IAEE,IAAMoH,EAAOsF,OAAOvI,aAAaC,QAAQ,QAEzC,OAAOgD,EAAOnD,KAAKC,MAAMkD,GAAQvB,IAAYtH,OAAO6B,KACpD,MAAO4L,GAGP,OADAC,QAAQC,IAAIF,GACLnG,IAAYtH,OAAO6B,SAXH,mBAEpBA,EAFoB,KAEdC,EAFc,KAkD3B,OApBAhB,qBAAU,WAAO,IAAD,EAERoM,EAAUiB,OAAOhB,SAAS0G,MAUhC,EAAA3G,EAAQP,WAAUG,OAAlB,oBAA4BI,EAAQP,YAGvB,UAAT9K,GACFqL,EAAQP,UAAUE,IAXD,CACjBsC,KAAM,cACN2E,SAAU,kBACV,YAAa,oBAQoBjS,MAElC,CAACA,IAEG,CAACA,EAlCS,SAAAnC,GACf,IAEE,IAAM4N,EAAe5N,aAAiB6N,SAAW7N,EAAMmC,GAAQnC,EAE/DoC,EAAQwL,GAERa,OAAOvI,aAAamO,QAAQ,OAAQrO,KAAKsO,UAAU1G,IACnD,MAAOG,GAEPC,QAAQC,IAAIF","file":"static/js/11.4e003723.chunk.js","sourcesContent":["// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** Imports createContext function\nimport { createContext } from 'react'\n\n// ** Imports createContextualCan function\nimport { createContextualCan } from '@casl/react'\n\n// ** Create Context\nexport const AbilityContext = createContext()\n\n// ** Init Can Context\nexport const Can = createContextualCan(AbilityContext.Consumer)\n","// ** Handles Layout Content Width (full / boxed)\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\n\n// ** Handles Menu Collapsed State (Bool)\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\n\n// ** Handles Menu Hidden State (Bool)\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\n\n// ** Handles RTL (Bool)\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n  const navbarStore = store.navbar\n  const contentWidth = store.layout.contentWidth\n\n  //** Vars\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [wrapperClass]: wrapperClass,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': !appLayout,\n          'content-area-wrapper': appLayout,\n          'container p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag\n          /*eslint-disable */\n          {...(layout === 'HorizontalLayout' && !appLayout\n            ? { className: classnames({ 'content-body': !appLayout }) }\n            : {})}\n          /*eslint-enable */\n        >\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default LayoutWrapper\n","import { lazy } from 'react'\n\n// ** Document title\nconst TemplateTitle = '%s - Vuexy React Admin Template'\n\n// ** Default Route\nconst DefaultRoute = '/home'\n\n// ** Merge Routes\nconst Routes = [\n  {\n    path: '/home',\n    component: lazy(() => import('../../views/Home'))\n  },\n  {\n    path: '/faq',\n    component: lazy(() => import('../../views/faq'))\n  },\n  {\n    path: '/account-settings',\n    component: lazy(() => import('../../views/account-settings'))\n  },\n  {\n    path: '/login',\n    component: lazy(() => import('../../views/Login')),\n    layout: 'BlankLayout'\n  },\n  {\n    path: '/error',\n    component: lazy(() => import('../../views/Error')),\n    layout: 'BlankLayout'\n  }\n]\n\nexport { DefaultRoute, TemplateTitle, Routes }\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\nconst BlankLayout = ({ children, ...rest }) => {\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div className='blank-page'>\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { Settings, X } from 'react-feather'\nimport { CustomInput, FormGroup } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    setSkin,\n    isRtl,\n    setIsRtl,\n    layout,\n    setLayout,\n    navbarType,\n    setNavbarType,\n    footerType,\n    setFooterType,\n    navbarColor,\n    setNavbarColor,\n    isHidden,\n    setIsHidden,\n    contentWidth,\n    setContentWidth,\n    menuCollapsed,\n    setMenuCollapsed,\n    transition,\n    setTransition\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setSkin(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setNavbarType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={`footer-${radio.name}`}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setFooterType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content'>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Content Width</p>\n            <div className='d-flex'>\n              <CustomInput\n                type='radio'\n                id='full-width'\n                className='mr-1'\n                label='Full Width'\n                checked={contentWidth === 'full'}\n                onChange={() => setContentWidth('full')}\n              />\n              <CustomInput\n                type='radio'\n                id='boxes'\n                label='Boxed'\n                checked={contentWidth === 'boxed'}\n                onChange={() => setContentWidth('boxed')}\n              />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex'>\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='font-weight-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='font-weight-bold'>Menu Layout</p>\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <CustomInput\n                type='radio'\n                id='vertical-layout'\n                label='Vertical'\n                checked={layout === 'VerticalLayout'}\n                onChange={() => setLayout('vertical')}\n                className='mr-1'\n              />\n              <CustomInput\n                type='radio'\n                id='horizontal-layout'\n                label='Horizontal'\n                checked={layout === 'HorizontalLayout'}\n                onChange={() => setLayout('horizontal')}\n              />\n            </div>\n          </FormGroup>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <div className='d-flex align-items-center'>\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\n                <CustomInput\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\n              <CustomInput\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <p className='font-weight-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </FormGroup>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-left d-block d-md-inline-block mt-25'>\n        COPYRIGHT © {new Date().getFullYear()}{' '}\n        <a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\n          Pixinvent\n        </a>\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\n      </span>\n      <span className='float-md-right d-none d-md-block'>\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span>\n    </p>\n  )\n}\n\nexport default Footer\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogout } from '@store/actions/auth'\n\n// ** Third Party Components\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\nconst UserDropdown = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** State\n  const [userData, setUserData] = useState(null)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  //** Vars\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name font-weight-bold'>{(userData && userData['username']) || 'John Doe'}</span>\n          <span className='user-status'>{(userData && userData.role) || 'Admin'}</span>\n        </div>\n        <Avatar color='primary' content='AD' />\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownItem tag={Link} to='/account-settings' >\n          <User size={14} className='mr-75' />\n          <span className='align-middle'>Profile</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\n          <Power size={14} className='mr-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({ type: 'LOGIN', data })\n\n    // ** Add to user to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT' })\n\n    // ** Remove user from localStorage\n    localStorage.removeItem('userData')\n  }\n}\n","// ** Dropdowns Imports\nimport { Fragment } from 'react'\n\nimport UserDropdown from './UserDropdown'\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from 'react-feather'\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none d-flex align-items-center'>\n        <NavItem className='mobile-menu mr-auto'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavItem className='d-none d-lg-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <ul className='nav navbar-nav align-items-center ml-auto'>\n        <UserDropdown />\n      </ul>\n    </Fragment>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <NavbarUser skin={skin} setSkin={setSkin} setMenuVisibility={setMenuVisibility} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","import { Mail, Home } from 'react-feather'\n\nexport default [\n  {\n    id: 'home',\n    title: 'Home',\n    icon: <Home size={20} />,\n    navLink: '/home'\n  },\n  {\n    id: 'secondPage',\n    title: 'Second Page',\n    icon: <Mail size={20} />,\n    navLink: '/second-page'\n  }\n]\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item mr-auto'>\n          <NavLink to='/' className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\n// ** Vertical Menu Array Of Items\nimport navigation from '@src/navigation/vertical'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuLink = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  toggleActiveGroup,\n  parentItem,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  // ** To match path\n  const match = matchPath(currentURL, {\n    path: `${item.navLink}/:param`,\n    exact: true,\n    strict: false\n  })\n\n  // ** Search for current item parents\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    return allParents\n  }\n\n  // ** URL Vars\n  const resetActiveGroup = navLink => {\n    const parents = search(navigation, navLink, match)\n    toggleActiveGroup(item.id, parents)\n  }\n\n  // ** Reset Active & Open Group Arrays\n  const resetActiveAndOpenGroups = () => {\n    setGroupActive([])\n    setGroupOpen([])\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n        onClick={e => {\n          if (!item.navLink.length) {\n            e.preventDefault()\n          }\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  parentItem,\n  menuCollapsed,\n  menuHover,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggles Open Group\n  const toggleOpenGroup = (item, parentItem) => {\n    let openArr = groupOpen\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      allParents.pop()\n    }\n\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\n    } else {\n      openArr = []\n      if (!groupOpen.includes(item)) {\n        openArr.push(item)\n      }\n    }\n\n    // ** Set Open Group\n    setGroupOpen([...openArr])\n  }\n\n  // ** Toggle Active Group\n  const toggleActiveGroup = (item, parentItem) => {\n    let activeArr = groupActive\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      activeArr = allParents\n    } else {\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\n    }\n\n    // ** Set open group removing any activegroup item present in opengroup state\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\n    setGroupOpen([...openArr])\n\n    // **  Set Active Group\n    setGroupActive([...activeArr])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\n      toggleActiveGroup(item.id)\n    } else {\n      toggleOpenGroup(item.id, parentItem)\n    }\n\n    e.preventDefault()\n  }\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            toggleActiveGroup={toggleActiveGroup}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            routerProps={routerProps}\n            currentActiveItem={currentActiveItem}\n            activeItem={activeItem}\n            setActiveItem={setActiveItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuSectionHeader,\n    VerticalNavMenuGroup,\n    VerticalNavMenuLink\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Vertical Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    if (menuCollapsed) {\n      setMenuHover(true)\n    }\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={navigation}\n                  groupActive={groupActive}\n                  setGroupActive={setGroupActive}\n                  activeItem={activeItem}\n                  setActiveItem={setActiveItem}\n                  groupOpen={groupOpen}\n                  setGroupOpen={setGroupOpen}\n                  routerProps={routerProps}\n                  menuCollapsed={menuCollapsed}\n                  menuHover={menuHover}\n                  currentActiveItem={currentActiveItem}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\nimport { useEffect } from 'react'\n\n// ** Store & Actions\nimport { handleRTL } from '@store/actions/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector(state => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(isRtl) : value\n      dispatch(handleRTL(valueToStore))\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName('html')[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute('dir', 'rtl')\n    } else {\n      element.setAttribute('dir', 'ltr')\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n","//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useNavbarType = () => {\n  // ** State\n  const [navbarType, setNavbarType] = useState(() => {\n    try {\n      return themeConfig.layout.navbar.type\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.navbar.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(navbarType) : value\n\n      // ** Set state\n      setNavbarType(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [navbarType, setValue]\n}\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useFooterType = () => {\n  // ** State\n  const [footerType, setFooterType] = useState(() => {\n    try {\n      return themeConfig.layout.footer.type\n    } catch (error) {\n      // ** If error also initialValue\n      console.log(error)\n      return themeConfig.layout.footer.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(footerType) : value\n\n      // ** Set state\n      setFooterType(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [footerType, setValue]\n}\n","//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useNavbarColor = () => {\n  // ** State\n  const [navbarColor, setNavbarColor] = useState(() => {\n    try {\n      return themeConfig.layout.navbar.backgroundColor\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.navbar.backgroundColor\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\n\n      // ** Set state\n      setNavbarColor(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [navbarColor, setValue]\n}\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  const isHidden = layoutStore.menuHidden\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n          routerProps={routerProps}\n          currentActiveItem={currentActiveItem}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar : <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          menuCollapsed={menuCollapsed}\n          setMenuCollapsed={setMenuCollapsed}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\nconst VerticalLayout = props => <Layout {...props}>{props.children}</Layout>\n\nexport default VerticalLayout\n","import { Mail, Home } from 'react-feather'\n\nexport default [\n  {\n    id: 'home',\n    title: 'Home',\n    icon: <Home size={20} />,\n    navLink: '/home'\n  },\n  {\n    id: 'secondPage',\n    title: 'FAQ',\n    icon: <Mail size={20} />,\n    navLink: '/faq'\n  }\n]\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\n\n// ** Horizontal menu items array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst HorizontalNavMenuLink = ({\n  item,\n  setOpenDropdown,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  routerProps,\n  currentActiveItem,\n  isChild\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\n\n  // ** Get parents of current items\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    allParents.pop()\n    return allParents\n  }\n\n  // ** Remove all items from OpenDropdown array\n  const resetOpenDropdowns = () => setOpenDropdown([])\n\n  // ** On mount update active group array\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames('nav-item', {\n        active: item.navLink === activeItem,\n        disabled: item.disabled\n      })}\n      onClick={resetOpenDropdowns}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        tag={LinkTag}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\n\n// ** Utils\nimport { isNavGroupActive } from '@layouts/utils'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const {\n    item,\n    submenu,\n    groupActive,\n    onMouseEnter,\n    onMouseLeave,\n    openDropdown,\n    setGroupActive,\n    activeItem,\n    setActiveItem,\n    routerProps,\n    setOpenDropdown,\n    currentActiveItem\n  } = props\n\n  // ** URL Var\n  const currentURL = useLocation().pathname\n\n  // ** Dropdown menu modifiers\n  const menuModifiers = {\n    setMaxHeight: {\n      enabled: true,\n      fn: data => {\n        const pageHeight = window.innerHeight,\n          ddTop = data.instance.reference.getBoundingClientRect().top,\n          ddHeight = data.popper.height\n        let maxHeight, stylesObj\n\n        // ** Calculate and set height\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\n          maxHeight = pageHeight - ddTop - 25\n          stylesObj = {\n            maxHeight,\n            overflowY: 'auto'\n          }\n        }\n\n        const ddRef = data.instance.popper.getBoundingClientRect()\n\n        // ** If there is not space left to open sub menu open it to the right\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\n        }\n\n        return {\n          ...data,\n          styles: {\n            ...stylesObj\n          }\n        }\n      }\n    }\n  }\n  return (\n    <Dropdown\n      tag='li'\n      className={classnames({\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active':\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\n      })}\n      isOpen={openDropdown.includes(item.id)}\n      toggle={() => onMouseEnter(item.id)}\n      onMouseEnter={() => onMouseEnter(item.id)}\n      onMouseLeave={() => onMouseLeave(item.id)}\n    >\n      <DropdownToggle\n        to='/'\n        tag={Link}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n        onClick={e => e.preventDefault()}\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </DropdownToggle>\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\n        <HorizontalNavMenuItems\n          submenu={true}\n          parentItem={item}\n          items={item.children}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          openDropdown={openDropdown}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          isChild={true}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Horizontal Menu Array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\n  // ** States\n  const [activeItem, setActiveItem] = useState(null)\n  const [groupActive, setGroupActive] = useState([])\n  const [openDropdown, setOpenDropdown] = useState([])\n\n  // ** On mouse enter push the ID to openDropdown array\n  const onMouseEnter = id => {\n    const arr = openDropdown\n    arr.push(id)\n    setOpenDropdown([...arr])\n  }\n\n  // ** On mouse leave remove the ID to openDropdown array\n  const onMouseLeave = id => {\n    const arr = openDropdown\n    arr.splice(arr.indexOf(id), 1)\n    setOpenDropdown([...arr])\n  }\n\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems\n          submenu={false}\n          items={navigation}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          openDropdown={openDropdown}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? menu : <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\nconst HorizontalLayout = props => <Layout {...props}>{props.children}</Layout>\n\nexport default HorizontalLayout\n","// ** React Imports\nimport { Suspense, useContext, lazy } from 'react'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\nimport { useLayout } from '@hooks/useLayout'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Custom Components\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\n\n// ** Router Components\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\n\n// ** Routes & Default Routes\nimport { DefaultRoute, Routes } from './routes'\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout'\nimport VerticalLayout from '@src/layouts/VerticalLayout'\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\n\nconst Router = () => {\n  // ** Hooks\n  const [layout, setLayout] = useLayout()\n  const [transition, setTransition] = useRouterTransition()\n\n  // ** ACL Ability Context\n  const ability = useContext(AbilityContext)\n\n  // ** Default Layout\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\n\n  // ** All of the available layouts\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\n\n  // ** Current Active Item\n  const currentActiveItem = null\n\n  // ** Return Filtered Array of Routes & Paths\n  const LayoutRoutesAndPaths = layout => {\n    const LayoutRoutes = []\n    const LayoutPaths = []\n\n    if (Routes) {\n      Routes.filter(route => {\n        // ** Checks if Route layout or Default layout matches current layout\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\n          LayoutRoutes.push(route)\n          LayoutPaths.push(route.path)\n        }\n      })\n    }\n\n    return { LayoutRoutes, LayoutPaths }\n  }\n\n  const NotAuthorized = lazy(() => import('@src/views/NotAuthorized'))\n\n  // ** Init Error Component\n  const Error = lazy(() => import('@src/views/Error'))\n\n  /**\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\n   */\n  const FinalRoute = props => {\n    const route = props.route\n    let action, resource\n\n    // ** Assign vars based on route meta\n    if (route.meta) {\n      action = route.meta.action ? route.meta.action : null\n      resource = route.meta.resource ? route.meta.resource : null\n    }\n\n    if (\n      (!isUserLoggedIn() && route.meta === undefined) ||\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\n    ) {\n      /**\n       ** If user is not Logged in & route meta is undefined\n       ** OR\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\n       ** Then redirect user to login\n       */\n\n      return <Redirect to='/login' />\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\n      return <Redirect to='/' />\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\n      return <Redirect to='/misc/not-authorized' />\n    } else {\n      // ** If none of the above render component\n      return <route.component {...props} />\n    }\n  }\n\n  // ** Return Route to Render\n  const ResolveRoutes = () => {\n    return Object.keys(Layouts).map((layout, index) => {\n      // ** Convert Layout parameter to Layout Component\n      // ? Note: make sure to keep layout and component name equal\n\n      const LayoutTag = Layouts[layout]\n\n      // ** Get Routes and Paths of the Layout\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\n\n      // ** We have freedom to display different layout for different route\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\n\n      // ** RouterProps to pass them to Layouts\n      const routerProps = {}\n\n      return (\n        <Route path={LayoutPaths} key={index}>\n          <LayoutTag\n            routerProps={routerProps}\n            layout={layout}\n            setLayout={setLayout}\n            transition={transition}\n            setTransition={setTransition}\n            currentActiveItem={currentActiveItem}\n          >\n            <Switch>\n              {LayoutRoutes.map(route => {\n                return (\n                  <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact === true}\n                    render={props => {\n                      // ** Assign props to routerProps\n                      Object.assign(routerProps, {\n                        ...props,\n                        meta: route.meta\n                      })\n\n                      return (\n                        <Suspense fallback={null}>\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\n                          <LayoutWrapper\n                            layout={DefaultLayout}\n                            transition={transition}\n                            setTransition={setTransition}\n                            /* Conditional props */\n                            /*eslint-disable */\n                            {...(route.appLayout\n                              ? {\n                                  appLayout: route.appLayout\n                                }\n                              : {})}\n                            {...(route.meta\n                              ? {\n                                  routeMeta: route.meta\n                                }\n                              : {})}\n                            {...(route.className\n                              ? {\n                                  wrapperClass: route.className\n                                }\n                              : {})}\n                            /*eslint-enable */\n                          >\n                            <route.component {...props} />\n                            {/* <FinalRoute route={route} {...props} /> */}\n                          </LayoutWrapper>\n                        </Suspense>\n                      )\n                    }}\n                  />\n                )\n              })}\n            </Switch>\n          </LayoutTag>\n        </Route>\n      )\n    })\n  }\n\n  return (\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\n      <Switch>\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\n        {/* <Route\n          exact\n          path='/'\n          render={() => {\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\n          }}\n        /> */}\n        <Route\n          exact\n          path='/'\n          render={() => {\n            return <Redirect to={DefaultRoute} />\n          }}\n        />\n        {/* Not Auth Route */}\n        <Route\n          exact\n          path='/not-authorized'\n          render={props => (\n            <Layouts.BlankLayout>\n              <NotAuthorized />\n            </Layouts.BlankLayout>\n          )}\n        />\n        {ResolveRoutes()}\n        {/* NotFound Error page */}\n        <Route path='*' component={Error} />/\n      </Switch>\n    </AppRouter>\n  )\n}\n\nexport default Router\n","//** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useLayout = () => {\n  // ** States\n  const [lastLayout, setLastLayout] = useState(null)\n  const [layout, setLayout] = useState(() => {\n    try {\n      return themeConfig.layout.type\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(layout) : value\n\n      // ** Set state\n      setLayout(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  const handleLayout = () => {\n    // ** If layout is horizontal & screen size is equals to or below 1200\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\n      setLayout('vertical')\n      setLastLayout('horizontal')\n    }\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n      setLayout('horizontal')\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    handleLayout()\n  }, [])\n\n  useEffect(() => {\n    // ** Window Resize Event\n    window.addEventListener('resize', handleLayout)\n  }, [layout, lastLayout])\n\n  return [layout, setValue]\n}\n","//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useRouterTransition = () => {\n  // ** State\n  const [transition, setTransition] = useState(() => {\n    try {\n      return themeConfig.layout.routerTransition\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.routerTransition\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(transition) : value\n\n      // ** Set state\n      setTransition(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [transition, setValue]\n}\n","// ** Router Import\nimport Router from './router/Router'\n\nconst App = props => <Router />\n\nexport default App\n","// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\n\n// ** Checks if the passed date is today\nconst isToday = date => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: 'short', day: 'numeric' }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: 'numeric', minute: 'numeric' }\n  }\n\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = userRole => {\n  if (userRole === 'admin') return '/'\n  if (userRole === 'client') return '/access-control'\n  return '/login'\n}\n\n// ** React Select Theme Colors\nexport const selectThemeColors = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#7367f01a', // for option hover bg-color\n    primary: '#7367f0', // for selected option bg-color\n    neutral10: '#7367f0', // for tags bg-color\n    neutral20: '#ededed', // for input border-color\n    neutral30: '#ededed' // for input hover border-color\n  }\n})\n","//** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useSkin = () => {\n  // ** State\n  const [skin, setSkin] = useState(() => {\n    try {\n      // ** Get from local storage by key\n      const item = window.localStorage.getItem('skin')\n      // ** Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : themeConfig.layout.skin\n    } catch (error) {\n      // ** If error also return initialValue\n      console.log(error)\n      return themeConfig.layout.skin\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(skin) : value\n      // ** Set state\n      setSkin(valueToStore)\n      // ** Save to local storage\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: 'dark-layout',\n      bordered: 'bordered-layout',\n      'semi-dark': 'semi-dark-layout'\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (skin !== 'light') {\n      element.classList.add(classNames[skin])\n    }\n  }, [skin])\n\n  return [skin, setValue]\n}\n"],"sourceRoot":""}